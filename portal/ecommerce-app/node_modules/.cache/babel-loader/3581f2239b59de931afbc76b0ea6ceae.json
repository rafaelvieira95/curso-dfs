{"ast":null,"code":"var _jsxFileName = \"/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Pages/Admin/Product/Create/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Col, Form, Button } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport './styles.css';\nimport api from '../../../../Services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Product = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [companies, setCompanies] = useState([]);\n  const history = useHistory();\n\n  const submit = async data => {\n    const {\n      Name,\n      Description,\n      Price,\n      Observation,\n      CompanyId,\n      ImageUri\n    } = data;\n\n    try {\n      const response = await api.post('products', {\n        Name,\n        Description,\n        Price,\n        Observation,\n        ImageUri,\n        CompanyId\n      });\n\n      if (response.status === 200) {\n        history.push('/');\n      }\n    } catch (error) {\n      console.exception(error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      const response = await api.get('companies');\n      setCompanies(response.data);\n    };\n\n    fetchCompanies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(submit),\n        className: \"block\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 4,\n            controlId: \"Product.Name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \" Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ...register(\"Name\", {\n                required: true,\n                minLength: 5,\n                maxLength: 45\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \" insert product name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 4,\n            controlId: \"Product.Description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \" Descritpion \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textArea\",\n              rows: 4,\n              placeholder: \"type one description of product max 1024 caracter\",\n              ...register(\"Description\", {\n                required: true,\n                minLength: 5,\n                maxLength: 1024\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \" comment at least short descritpion about product \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 3,\n            controlId: \"Product.Price\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \" Price \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              ...register(\"Price\", {\n                required: true,\n                max: 1000000,\n                min: 1\n              }),\n              defaultValue: 0.0,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \" product's cost \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 4,\n            controlId: \"Product.Observation\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \" Observation \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textArea\",\n              placeholder: \"max 2048 caracteres\",\n              rows: 6,\n              ...register(\"Observation\", {\n                required: true,\n                minLength: 10,\n                maxLength: 2048\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \" comment at least short observation about product \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"Product.Image\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-primary\",\n              children: \" Image Location (use link) \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"link\",\n              ...register(\"ImageUri\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 2,\n            controlId: \"Product.Company\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \" Company \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              ...register(\"CompanyId\", {\n                required: true,\n                onChange: e => e.target.value\n              }),\n              children: companies && companies.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: c.id,\n                children: [\" \", c.fantasyName, \" \"]\n              }, c.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 55\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"Button\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-success\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Product, \"XEKi59L9UClI7IMl5IQEoQS2Cfo=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Pages/Admin/Product/Create/index.js"],"names":["React","useEffect","useState","Container","Col","Form","Button","useForm","useHistory","api","Product","register","handleSubmit","companies","setCompanies","history","submit","data","Name","Description","Price","Observation","CompanyId","ImageUri","response","post","status","push","error","console","exception","fetchCompanies","get","required","minLength","maxLength","max","min","onChange","e","target","value","map","c","id","fantasyName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,MAA9B,QAA2C,iBAA3C;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,cAAP;AACA,OAAOC,GAAP,MAAgB,0BAAhB;;;;AAGA,MAAMC,OAAO,GAAG,MAAK;AAAA;;AAGhB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA2BL,OAAO,EAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMa,OAAO,GAAGP,UAAU,EAA1B;;AAEA,QAAMQ,MAAM,GAAG,MAAMC,IAAN,IAAa;AAErB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,WAAP;AAAoBC,MAAAA,KAApB;AAA2BC,MAAAA,WAA3B;AAAwCC,MAAAA,SAAxC;AAAmDC,MAAAA;AAAnD,QAA+DN,IAArE;;AAED,QAAG;AAEF,YAAMO,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAJ,CAAS,UAAT,EAAoB;AACvCP,QAAAA,IADuC;AAEvCC,QAAAA,WAFuC;AAGvCC,QAAAA,KAHuC;AAIvCC,QAAAA,WAJuC;AAKvCE,QAAAA,QALuC;AAMvCD,QAAAA;AANuC,OAApB,CAAvB;;AASA,UAAGE,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACzBX,QAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACD;AAEF,KAfA,CAeA,OAAMC,KAAN,EAAY;AACXC,MAAAA,OAAO,CAACC,SAAR,CAAkBF,KAAlB;AACD;AACL,GAtBD;;AAyBA3B,EAAAA,SAAS,CAAC,MAAK;AAEV,UAAM8B,cAAc,GAAI,YAAW;AAC9B,YAAMP,QAAQ,GAAG,MAAMf,GAAG,CAACuB,GAAJ,CAAQ,WAAR,CAAvB;AACAlB,MAAAA,YAAY,CAACU,QAAQ,CAACP,IAAV,CAAZ;AAEJ,KAJD;;AAKAc,IAAAA,cAAc;AAClB,GARQ,EAQP,EARO,CAAT;AAYD,sBACC;AAAA,2BACG,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,6BAEI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEnB,YAAY,CAACI,MAAD,CAA5B;AAAsC,QAAA,SAAS,EAAC,OAAhD;AAAA,gCAGG,QAAC,IAAD,CAAM,GAAN;AAAA,kCACA,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBADA,eAEC,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAEZ,GAAhB;AAAqB,YAAA,EAAE,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAC,cAAtC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,MAAnB;AAAA,iBACKO,QAAQ,CAAC,MAAD,EAAS;AACnBsB,gBAAAA,QAAQ,EAAE,IADS;AAEpBC,gBAAAA,SAAS,EAAE,CAFS;AAGpBC,gBAAAA,SAAS,EAAE;AAHS,eAAT;AADb;AAAA;AAAA;AAAA;AAAA,oBAFF,eAQE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,eAYC,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAZD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHH,eAkBG,QAAC,IAAD,CAAM,GAAN;AAAA,kCACA,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBADA,eAEC,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAE/B,GAAhB;AAAqB,YAAA,EAAE,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAC,qBAAtC;AAAA,oCACA,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,EAAE,EAAC,UAAjB;AAA4B,cAAA,IAAI,EAAE,CAAlC;AAAqC,cAAA,WAAW,EAAC,mDAAjD;AAAA,iBACUO,QAAQ,CAAC,aAAD,EAAgB;AAC1BsB,gBAAAA,QAAQ,EAAE,IADgB;AAE1BC,gBAAAA,SAAS,EAAE,CAFe;AAG1BC,gBAAAA,SAAS,EAAE;AAHe,eAAhB;AADlB;AAAA;AAAA;AAAA;AAAA,oBAFF,eASE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,eAaC,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAbD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBH,eAkCE,QAAC,IAAD,CAAM,GAAN;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAE/B,GAAhB;AAAqB,YAAA,EAAE,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAC,eAAtC;AAAA,oCACA,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,IAAI,EAAC,QAAnB;AAAA,iBACMO,QAAQ,CAAC,OAAD,EAAS;AACnBsB,gBAAAA,QAAQ,EAAE,IADS;AAEnBG,gBAAAA,GAAG,EAAE,OAFc;AAGnBC,gBAAAA,GAAG,EAAE;AAHc,eAAT,CADd;AAMA,cAAA,YAAY,EAAE,GANd;AAMmB,cAAA,QAAQ;AAN3B;AAAA;AAAA;AAAA;AAAA,oBAFF,eASE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAaE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCF,eAkDI,QAAC,IAAD,CAAM,GAAN;AAAA,kCACA,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAEjC,GAAhB;AAAqB,YAAA,EAAE,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAC,qBAAtC;AAAA,oCACA,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,EAAE,EAAC,UAAjB;AAA4B,cAAA,WAAW,EAAC,qBAAxC;AAA8D,cAAA,IAAI,EAAE,CAApE;AAAA,iBACMO,QAAQ,CAAC,aAAD,EAAgB;AAC1BsB,gBAAAA,QAAQ,EAAE,IADgB;AAE1BC,gBAAAA,SAAS,EAAE,EAFe;AAG1BC,gBAAAA,SAAS,EAAE;AAHe,eAAhB;AADd;AAAA;AAAA;AAAA;AAAA,oBAFF,eASE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAaA,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAbA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlDJ,eAkEI,QAAC,IAAD,CAAM,GAAN;AAAA,kCACA,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBADA,eAEI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAE/B,GAAhB;AAAqB,YAAA,SAAS,EAAC,eAA/B;AAAA,oCACG,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,eAEG,QAAC,IAAD,CAAM,OAAN;AAAe,cAAA,IAAI,EAAC,MAApB;AAAA,iBACOO,QAAQ,CAAC,UAAD,EACZ;AAAEsB,gBAAAA,QAAQ,EAAE;AAAZ,eADY;AADf;AAAA;AAAA;AAAA;AAAA,oBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAUI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlEJ,eA+EI,QAAC,IAAD,CAAM,GAAN;AAAA,kCACA,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBADA,eAEE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAE7B,GAAhB;AAAqB,YAAA,EAAE,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAC,iBAAtC;AAAA,oCACA,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAED,QAAC,IAAD,CAAM,OAAN;AAAc,cAAA,EAAE,EAAC,QAAjB;AAAA,iBACOO,QAAQ,CAAC,WAAD,EAAc;AACxBsB,gBAAAA,QAAQ,EAAE,IADc;AAExBK,gBAAAA,QAAQ,EAAEC,CAAC,IAAIA,CAAC,CAACC,MAAF,CAASC;AAFA,eAAd,CADf;AAAA,wBAMK5B,SAAS,IAAIA,SAAS,CAAC6B,GAAV,CAAcC,CAAC,iBAAI;AAAmB,gBAAA,KAAK,EAAEA,CAAC,CAACC,EAA5B;AAAA,gCAAkCD,CAAC,CAACE,WAApC;AAAA,iBAAaF,CAAC,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,sBAAnB;AANlB;AAAA;AAAA;AAAA;AAAA,oBAFC,eAUD,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,oBAVC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/EJ,eA+FI,QAAC,IAAD,CAAM,GAAN;AAAA,kCACA,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBADA,eAEE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,EAAE,EAAExC,GAAhB;AAAqB,YAAA,SAAS,EAAC,QAA/B;AAAA,mCACA,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAgC,cAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/FJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADH,mBADD;AA+GH,CA5JD;;GAAMM,O;UAGgCH,O,EAGjBC,U;;;KANfE,O;AA8JN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Container, Col, Form, Button} from 'react-bootstrap';\nimport {useForm} from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport './styles.css';\nimport api from '../../../../Services/api';\n\n\nconst Product = () =>{\n\n    \n     const {register, handleSubmit} = useForm();\n     const [companies, setCompanies] = useState([]);\n    \n     const history = useHistory();\n     \n     const submit = async data =>{\n             \n            const {Name, Description, Price, Observation, CompanyId, ImageUri} = data;\n           \n           try{\n           \n            const response = await api.post('products',{\n                Name, \n                Description, \n                Price, \n                Observation,\n                ImageUri, \n                CompanyId,\n            });\n\n            if(response.status === 200){\n              history.push('/');\n            }\n               \n          }catch(error){\n            console.exception(error);\n          }\n     }\n\n     \n     useEffect(() =>{\n\n          const fetchCompanies =  async () =>{\n               const response = await api.get('companies');\n               setCompanies(response.data);\n              \n          }\n          fetchCompanies();\n     },[]) \n    \n\n  \n    return (\n     <>\n        <Container fluid>\n\n            <Form onSubmit={handleSubmit(submit)} className=\"block\">   \n\n            \n               <Form.Row>\n               <Col md={4} />\n                <Form.Group as={Col} md={4} controlId=\"Product.Name\">\n                  <Form.Label className=\"badge badge-dark\"> Name </Form.Label>\n                  <Form.Control type=\"text\"\n                   {...register(\"Name\", {\n                     required: true,\n                    minLength: 5,\n                    maxLength: 45\n                    })}/>\n                  <Form.Text className=\"text-muted\"> insert product name </Form.Text>\n                </Form.Group>\n                <Col md={4} />\n                </Form.Row>\n\n               <Form.Row>\n               <Col md={4} />\n                <Form.Group as={Col} md={4} controlId=\"Product.Description\">\n                <Form.Label className=\"badge badge-dark\"> Descritpion </Form.Label>\n                  <Form.Control as=\"textArea\" rows={4} placeholder=\"type one description of product max 1024 caracter\" \n                        {...register(\"Description\", {\n                          required: true, \n                          minLength: 5,\n                          maxLength: 1024,\n                        })}\n                        />\n                  <Form.Text className=\"text-muted\"> comment at least short descritpion about product </Form.Text>\n                </Form.Group>\n                <Col md={4} />\n                </Form.Row>\n\n              <Form.Row>\n                <Col md={4} />\n                <Form.Group as={Col} md={3} controlId=\"Product.Price\">\n                <Form.Label className=\"badge badge-dark\"> Price </Form.Label>\n                  <Form.Control type=\"number\" \n                    {...register(\"Price\",{\n                      required: true,\n                      max: 1000000,\n                      min: 1\n                    })}\n                  defaultValue={0.0} required/>\n                  <Form.Text className=\"text-muted\"> product's cost </Form.Text>\n                </Form.Group>\n                <Col md={4} />\n                </Form.Row>\n\n                <Form.Row>\n                <Col md={4} />\n                <Form.Group as={Col} md={4} controlId=\"Product.Observation\">\n                <Form.Label className=\"badge badge-dark\"> Observation </Form.Label>\n                  <Form.Control as=\"textArea\" placeholder=\"max 2048 caracteres\" rows={6}\n                    {...register(\"Observation\", {\n                      required: true,\n                      minLength: 10,\n                      maxLength: 2048\n                    })}\n                  />\n                  <Form.Text className=\"text-muted\"> comment at least short observation about product </Form.Text>\n                </Form.Group>\n                <Col md={4} />\n                </Form.Row>\n                  \n                <Form.Row>\n                <Col md={4} />\n                    <Form.Group as={Col} controlId=\"Product.Image\">\n                       <Form.Label className=\"badge badge-primary\"> Image Location (use link) </Form.Label>\n                       <Form.Control  type=\"link\" \n                          {...register(\"ImageUri\", \n                          { required: true}\n                         )}\n                        />\n                    </Form.Group>\n                    <Col md={4} />\n                </Form.Row>\n               \n                <Form.Row>\n                <Col md={4} />\n                  <Form.Group as={Col} md={2} controlId=\"Product.Company\">\n                  <Form.Label className=\"badge badge-dark\"> Company </Form.Label>\n                 <Form.Control as=\"select\" \n                    {...register(\"CompanyId\", {\n                      required: true,\n                      onChange: e => e.target.value\n                    })}>\n                      \n                    { companies && companies.map(c => <option key={c.id} value={c.id}> {c.fantasyName} </option>)}\n                 </Form.Control>\n                 <Col md={4} />  \n              </Form.Group>\n                </Form.Row>\n           \n                <Form.Row>\n                <Col md={4} />\n                  <Form.Group as={Col} controlId=\"Button\">\n                  <Button className=\"btn-success\" type=\"submit\">Submit</Button>\n                  </Form.Group>\n                  <Col md={4} />\n                </Form.Row>\n             </Form>\n          \n        </Container>\n     </>\n    );\n}\n\nexport default Product;"]},"metadata":{},"sourceType":"module"}