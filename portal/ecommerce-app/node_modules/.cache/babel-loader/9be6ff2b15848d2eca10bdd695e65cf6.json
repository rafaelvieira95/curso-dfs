{"ast":null,"code":"var _jsxFileName = \"/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Pages/Admin/Company/Create/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport { IMaskInput } from 'react-imask';\nimport { Form, Button, Container, Col } from 'react-bootstrap';\nimport api from '../../../../Services/api';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanyCreate = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n\n  const onSubmit = async data => {\n    const {\n      CorporateName,\n      FantasyName,\n      Cnpj\n    } = data;\n    const response = await api.post('companies', {\n      CorporateName,\n      FantasyName,\n      Cnpj\n    });\n\n    if (response.status === 200) {\n      history.push('/');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form-position\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"Company.CorporateName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"badge badge-dark\",\n            children: \" Corporate Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, { ...register(\"CorporateName\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"enter with name by company.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"Company.FantasyName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"badge badge-dark\",\n            children: \" Fantasy Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, { ...register(\"FantasyName\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"enter with name Fantasy.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"Company.Cnpj\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"badge badge-danger\",\n            children: \" Cnpj \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 77\n          }, this), /*#__PURE__*/_jsxDEV(IMaskInput, {\n            mask: \"00.000.000/0000-00\",\n            radix: \".\",\n            ...register(\"Cnpj\", {\n              required: true,\n              maxlength: 14\n            }),\n            unmask: true,\n            onAccept: value => {\n              setValue(\"Cnpj\", value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \" Enter your Cnpj Here! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"Button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-success\",\n            type: \"submit\",\n            children: \" Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompanyCreate, \"w3s4nKy+rAaJQmC13Ey4LN1rAZ4=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = CompanyCreate;\nexport default CompanyCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyCreate\");","map":{"version":3,"sources":["/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Pages/Admin/Company/Create/index.js"],"names":["React","useForm","useHistory","IMaskInput","Form","Button","Container","Col","api","CompanyCreate","history","register","handleSubmit","setValue","onSubmit","data","CorporateName","FantasyName","Cnpj","response","post","status","push","required","maxlength","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport { IMaskInput } from 'react-imask';\nimport { Form, Button, Container, Col } from 'react-bootstrap';\nimport api from '../../../../Services/api';\n\nimport './styles.css';\n\nconst CompanyCreate = () => {\n\n\n    const history = useHistory();\n\n  const { register, handleSubmit, setValue} = useForm();\n\n    const onSubmit = async (data) => {\n    \n      const {CorporateName, FantasyName, Cnpj} = data;\n     \n      const response = await api.post('companies',{\n        CorporateName, FantasyName, Cnpj\n      });\n\n      if(response.status === 200){\n        history.push('/');\n      }\n  \n  }\n\n  return (\n\n    <Container fluid>\n\n          <Form className=\"form-position\" onSubmit={handleSubmit(onSubmit)}>\n\n           <Form.Row>\n             <Col md={4}/>\n            <Form.Group as={Col} controlId=\"Company.CorporateName\">\n              <Form.Label className=\"badge badge-dark\"> Corporate Name </Form.Label>\n              <Form.Control {...register(\"CorporateName\", { required: true })} />\n              <Form.Text className=\"text-muted\">\n                enter with name by company.\n              </Form.Text>\n            </Form.Group>\n            <Col md={4}/>\n            </Form.Row>\n\n            <Form.Row>\n            <Col md={4}/>\n            <Form.Group as={Col} controlId=\"Company.FantasyName\">\n              <Form.Label className=\"badge badge-dark\"> Fantasy Name </Form.Label>\n              <Form.Control {...register(\"FantasyName\", { required: true })} />\n              <Form.Text className=\"text-muted\">\n                enter with name Fantasy.\n              </Form.Text>\n            </Form.Group>\n            <Col md={4}/>\n            </Form.Row>\n\n\n            <Form.Row>\n            <Col md={4}/>\n            <Form.Group as={Col} controlId=\"Company.Cnpj\">\n              <Form.Label className=\"badge badge-danger\"> Cnpj </Form.Label><br />\n              <IMaskInput\n                mask='00.000.000/0000-00'\n                radix=\".\"\n                {...register(\"Cnpj\", { required: true, maxlength: 14 })}\n                unmask={true}\n                onAccept={\n                  (value) => { setValue(\"Cnpj\", value) }\n                }\n              />\n              <Form.Text className=\"text-muted\"> Enter your Cnpj Here! </Form.Text>\n\n            </Form.Group>\n            <Col md={4}/>\n            </Form.Row>\n\n            <Form.Row>\n            <Col md={4}/>\n            <Form.Group as={Col} controlId=\"Button\">\n              <Button className=\"btn-success\" type=\"submit\"> Submit</Button>\n            </Form.Group>\n            <Col md={4}/>\n            </Form.Row>\n\n          </Form>\n        \n    </Container>\n\n  );\n\n}\n\nexport default CompanyCreate;"]},"metadata":{},"sourceType":"module"}