{"ast":null,"code":"var _jsxFileName = \"/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Pages/Admin/Product/Update/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Container, Col, Form, Button } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, useParams } from 'react-router';\nimport './styles.css';\nimport api from '../../../../Services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductUpdate = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n\n  const submit = async data => {\n    const {\n      Name,\n      Description,\n      Price,\n      Observation,\n      CompanyId,\n      ImageUri\n    } = data;\n\n    try {\n      const response = await api.put(`products/${id}`, {\n        Name,\n        Description,\n        Price,\n        Observation,\n        ImageUri,\n        CompanyId\n      });\n\n      if (response.status === 200) {\n        history.push('/product/list');\n      }\n    } catch (error) {\n      if (error.response.status === 401) {\n        history.push('/signin');\n      }\n\n      if (error.response.status === 500) {\n        console.log(error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      const response = await api.get(`products/${id}`);\n      const obj = response.data;\n      setValue(\"Name\", obj.name);\n      setValue(\"Description\", obj.description);\n      setValue(\"Price\", obj.price);\n      setValue(\"Observation\", obj.observation);\n      setValue(\"ImageUri\", obj.imageUri);\n      setValue(\"CompanyId\", obj.companyId);\n    };\n\n    fetchProduct();\n  }, [id, setValue]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(submit),\n        className: \"block\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 4,\n            controlId: \"Product.Name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \" Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ...register(\"Name\", {\n                required: true,\n                minLength: 5,\n                maxLength: 45\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \" insert product name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 4,\n            controlId: \"Product.Description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \" Descritpion \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textArea\",\n              rows: 4,\n              placeholder: \"type one description of product max 1024 caracter\",\n              ...register(\"Description\", {\n                required: true,\n                minLength: 5,\n                maxLength: 1024\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \" comment at least short descritpion about product \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 3,\n            controlId: \"Product.Price\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \" Price \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              ...register(\"Price\", {\n                required: true,\n                max: 1000000,\n                min: 1\n              }),\n              defaultValue: 0.0,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \" product's cost \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: 4,\n            controlId: \"Product.Observation\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \" Observation \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textArea\",\n              placeholder: \"max 2048 caracteres\",\n              rows: 6,\n              ...register(\"Observation\", {\n                required: true,\n                minLength: 10,\n                maxLength: 2048\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \" comment at least short observation about product \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"Product.Image\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-primary\",\n              children: \" Image Location (use link) \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"link\",\n              ...register(\"ImageUri\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"Button\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-warning\",\n              type: \"submit\",\n              children: \"Submit changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProductUpdate, \"i7gtfXEhyQ+dtFYXGPRtVxFnlu4=\", false, function () {\n  return [useForm, useParams, useHistory];\n});\n\n_c = ProductUpdate;\nexport default ProductUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductUpdate\");","map":{"version":3,"sources":["/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Pages/Admin/Product/Update/index.js"],"names":["React","useEffect","Container","Col","Form","Button","useForm","useHistory","useParams","api","ProductUpdate","register","handleSubmit","setValue","id","history","submit","data","Name","Description","Price","Observation","CompanyId","ImageUri","response","put","status","push","error","console","log","fetchProduct","get","obj","name","description","price","observation","imageUri","companyId","required","minLength","maxLength","max","min"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {Container, Col, Form, Button} from 'react-bootstrap';\nimport {useForm} from 'react-hook-form';\nimport { useHistory, useParams } from 'react-router';\nimport './styles.css';\nimport api from '../../../../Services/api';\n\n\nconst ProductUpdate = () =>{\n\n     const {register, handleSubmit,setValue} = useForm();\n\n     const {id} = useParams();\n     const history = useHistory();\n     \n     const submit = async data =>{\n             \n            const {Name, Description, Price, Observation, CompanyId, ImageUri} = data;\n           \n           try{\n           \n            const response = await api.put(`products/${id}`,{\n                Name, \n                Description, \n                Price, \n                Observation,\n                ImageUri, \n                CompanyId,\n            });\n\n            if(response.status === 200){\n                history.push('/product/list');\n            }\n               \n          }catch(error){\n              if(error.response.status === 401){\n                  history.push('/signin');\n              }\n              if(error.response.status === 500){\n               console.log(error);\n              }\n          }\n     }\n\n     \n     useEffect(() =>{\n\n          const fetchProduct = async () => {\n\n              const response = await api.get(`products/${id}`);\n              const obj = response.data;\n           \n              setValue(\"Name\", obj.name);\n              setValue(\"Description\", obj.description);\n              setValue(\"Price\", obj.price);\n              setValue(\"Observation\", obj.observation);\n              setValue(\"ImageUri\", obj.imageUri);\n              setValue(\"CompanyId\", obj.companyId);\n          }\n\n          fetchProduct();\n            \n     },[id, setValue]);\n\n    \n    return (\n     <>\n        <Container fluid>\n\n            <Form onSubmit={handleSubmit(submit)} className=\"block\">   \n               <Form.Row>\n               <Col md={4} />\n                <Form.Group as={Col} md={4} controlId=\"Product.Name\">\n                  <Form.Label className=\"badge badge-dark\"> Name </Form.Label>\n                  <Form.Control type=\"text\"\n                   {...register(\"Name\", {\n                     required: true,\n                    minLength: 5,\n                    maxLength: 45\n                    })}/>\n                  <Form.Text className=\"text-muted\"> insert product name </Form.Text>\n                </Form.Group>\n                <Col md={4} />\n                </Form.Row>\n\n               <Form.Row>\n               <Col md={4} />\n                <Form.Group as={Col} md={4} controlId=\"Product.Description\">\n                <Form.Label className=\"badge badge-dark\"> Descritpion </Form.Label>\n                  <Form.Control as=\"textArea\" rows={4} placeholder=\"type one description of product max 1024 caracter\" \n                        {...register(\"Description\", {\n                          required: true, \n                          minLength: 5,\n                          maxLength: 1024,\n                        })}\n                        />\n                  <Form.Text className=\"text-muted\"> comment at least short descritpion about product </Form.Text>\n                </Form.Group>\n                <Col md={4} />\n                </Form.Row>\n\n              <Form.Row>\n                <Col md={4} />\n                <Form.Group as={Col} md={3} controlId=\"Product.Price\">\n                <Form.Label className=\"badge badge-dark\"> Price </Form.Label>\n                  <Form.Control type=\"number\" \n                    {...register(\"Price\",{\n                      required: true,\n                      max: 1000000,\n                      min: 1\n                    })}\n                  defaultValue={0.0} required/>\n                  <Form.Text className=\"text-muted\"> product's cost </Form.Text>\n                </Form.Group>\n                <Col md={4} />\n                </Form.Row>\n\n                <Form.Row>\n                <Col md={4} />\n                <Form.Group as={Col} md={4} controlId=\"Product.Observation\">\n                <Form.Label className=\"badge badge-dark\"> Observation </Form.Label>\n                  <Form.Control as=\"textArea\" placeholder=\"max 2048 caracteres\" rows={6}\n                    {...register(\"Observation\", {\n                      required: true,\n                      minLength: 10,\n                      maxLength: 2048\n                    })}\n                  />\n                  <Form.Text className=\"text-muted\"> comment at least short observation about product </Form.Text>\n                </Form.Group>\n                <Col md={4} />\n                </Form.Row>\n                  \n                <Form.Row>\n                <Col md={4} />\n                    <Form.Group as={Col} controlId=\"Product.Image\">\n                       <Form.Label className=\"badge badge-primary\"> Image Location (use link) </Form.Label>\n                       <Form.Control  type=\"link\" \n                          {...register(\"ImageUri\", \n                          { required: true}\n                         )}\n                        />\n                    </Form.Group>\n                    <Col md={4} />\n                </Form.Row>\n               \n                <Form.Row>\n                <Col md={4} />\n                  <Form.Group as={Col} controlId=\"Button\">\n                  <Button className=\"btn-warning\" type=\"submit\">Submit changes</Button>\n                  </Form.Group>\n                  <Col md={4} />\n                </Form.Row>\n             </Form>\n          \n        </Container>\n     </>\n    );\n}\n\nexport default ProductUpdate;"]},"metadata":{},"sourceType":"module"}