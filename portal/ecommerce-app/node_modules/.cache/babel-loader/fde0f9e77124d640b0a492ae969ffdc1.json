{"ast":null,"code":"var _jsxFileName = \"/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Pages/Checkout/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Button, Container, Form, Row, Col, Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { useForm } from 'react-hook-form';\nimport { IMaskInput } from 'react-imask';\nimport format from 'number-format.js';\nimport api from '../../Services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Checkout = () => {\n  _s();\n\n  var _errors$PostalCode;\n\n  const history = useHistory();\n  const UserId = useRef({});\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm({});\n  const [items, setItems] = useState([]);\n  const [itemsDesc, setItemDesc] = useState([]);\n\n  const handleGoBack = () => history.goBack();\n\n  useEffect(() => {\n    const loadItems = () => {\n      let myCart = localStorage.getItem('@cart:user');\n      var userStorage = localStorage.getItem('@ecommerce:user');\n\n      if (myCart !== null && userStorage !== null) {\n        let cartItems = JSON.parse(myCart);\n        let user = JSON.parse(userStorage);\n        setItemDesc(cartItems);\n        var myItems = [];\n        cartItems.forEach(p => {\n          myItems.push({\n            ProductId: parseInt(p.id),\n            Quantity: parseInt(p.quantity)\n          });\n        });\n        setItems(myItems);\n        UserId.current = parseInt(user === null || user === void 0 ? void 0 : user.user.id);\n      }\n    };\n\n    loadItems();\n  }, []);\n\n  const onSubmit = async data => {\n    const {\n      Address,\n      PostalCode,\n      Observation,\n      FormatOfPayment,\n      StatusPurchase\n    } = data;\n    const Price = itemsDesc.reduce((acc, item) => item.price + acc, 0);\n    const response = await api.post('purchases', {\n      Address,\n      PostalCode,\n      Observation,\n      FormatOfPayment,\n      StatusPurchase,\n      Price,\n      Items: items,\n      UserId: UserId.current\n    });\n\n    if (response.status === 200) {\n      localStorage.removeItem('@cart:user');\n      history.push('/dashboard');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"Address\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  for: \"Address\",\n                  className: \"badge badge-dark\",\n                  children: \"Address \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"type your address\",\n                  ...register(\"Address\", {\n                    required: true,\n                    maxLength: 255,\n                    minLength: 5\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"ZipCode\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"badge badge-dark\",\n                  children: \" Zip Code \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(IMaskInput, {\n                  mask: \"00000-000\",\n                  radix: \".\",\n                  unmask: true,\n                  ...register(\"PostalCode\", {\n                    required: true,\n                    maxLength: {\n                      value: 8,\n                      message: 'zip code required 8 numbers'\n                    },\n                    minLength: {\n                      value: 8,\n                      message: 'zip code required 8 numbers'\n                    }\n                  }),\n                  onAccept: value => setValue(\"PostalCode\", value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", errors.PostalCode && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'red',\n                      fontWeight: 'bold'\n                    },\n                    children: [\" \", (_errors$PostalCode = errors.PostalCode) === null || _errors$PostalCode === void 0 ? void 0 : _errors$PostalCode.message, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 63\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"Observation\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"badge badge-dark\",\n                  children: \" Observation \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  rows: 4,\n                  placeholder: \"(optional) insert least one observation about your new purchase\",\n                  ...register(\"Observation\", {\n                    required: true,\n                    minLength: {\n                      value: 0\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"FormatOfPayment\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"badge badge-dark\",\n                  children: \"Format of Payment \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  ...register(\"FormatOfPayment\", {\n                    required: true,\n                    value: \"1\",\n                    onChange: e => e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"1\",\n                    selected: true,\n                    children: \" Credit Card\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"2\",\n                    children: \" Debit Card\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"3\",\n                    children: \" Bank Billet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"StatusPurchase\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"badge badge-dark\",\n                  children: \"Status of Purchase \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  ...register(\"StatusPurchase\", {\n                    required: true,\n                    value: \"1\",\n                    onChange: e => e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"1\",\n                    selected: true,\n                    children: \" Open \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"2\",\n                    children: \" Paid \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"btnSubmit\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  sm: 6,\n                  children: \" Submit \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"btnBack\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn btn-warning\",\n                  onClick: () => handleGoBack(),\n                  children: \" Go Back \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"Total\",\n                children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \" Total $ (BRL) \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: format(\"#,##0.00\", itemsDesc.reduce((acc, item) => item.price + acc, 0))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 40\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            responsive: true,\n            fluid: true,\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Product Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: itemsDesc && itemsDesc.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: product.imageUri,\n                    alt: \"product\",\n                    height: 64,\n                    width: 64\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: product.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", format(\"#,##0.00\", product.price), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 41\n                }, this)]\n              }, product.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Checkout, \"bC6CcRaVfqT4L2dh3GwjxGzp3Jk=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Pages/Checkout/index.js"],"names":["React","useEffect","useState","useRef","Button","Container","Form","Row","Col","Table","useHistory","useForm","IMaskInput","format","api","Checkout","history","UserId","register","handleSubmit","setValue","formState","errors","items","setItems","itemsDesc","setItemDesc","handleGoBack","goBack","loadItems","myCart","localStorage","getItem","userStorage","cartItems","JSON","parse","user","myItems","forEach","p","push","ProductId","parseInt","id","Quantity","quantity","current","onSubmit","data","Address","PostalCode","Observation","FormatOfPayment","StatusPurchase","Price","reduce","acc","item","price","response","post","Items","status","removeItem","required","maxLength","minLength","value","message","color","fontWeight","onChange","e","target","map","product","imageUri","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Button, Container, Form, Row, Col, Table } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport { useForm } from 'react-hook-form';\nimport { IMaskInput } from 'react-imask';\nimport format from 'number-format.js';\n\nimport api from '../../Services/api';\n\nconst Checkout = () => {\n\n    const history = useHistory();\n    const UserId = useRef({});\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm({});\n    const [items, setItems] = useState([]);\n    const [itemsDesc, setItemDesc] = useState([]);\n\n\n    const handleGoBack = () => history.goBack();\n\n    useEffect(() => {\n\n        const loadItems = () => {\n\n            let myCart = localStorage.getItem('@cart:user');\n            var userStorage = localStorage.getItem('@ecommerce:user');\n\n            if (myCart !== null && userStorage !== null) {\n\n                let cartItems = JSON.parse(myCart);\n                let user = JSON.parse(userStorage);\n                setItemDesc(cartItems);\n                \n                var myItems = []\n                cartItems.forEach(p => {\n                \n                     myItems.push({\n                        ProductId: parseInt(p.id),\n                        Quantity: parseInt(p.quantity)\n                     });      \n                });\n                setItems(myItems);\n                UserId.current = parseInt(user?.user.id);           \n            }\n        }\n\n        loadItems();\n    \n    }, []);\n\n    const onSubmit = async (data) => {\n\n        const { Address, PostalCode, Observation, FormatOfPayment, StatusPurchase } = data;\n\n        const Price = itemsDesc.reduce((acc, item) => item.price + acc, 0);\n \n        const response = await api.post('purchases', {\n            Address,\n            PostalCode,\n            Observation,\n            FormatOfPayment,\n            StatusPurchase,\n            Price,\n            Items: items,\n            UserId: UserId.current\n        });\n\n        if (response.status === 200){\n            localStorage.removeItem('@cart:user');\n            history.push('/dashboard');\n        }\n     }\n\n\n    return (\n        <>\n            <Container fluid={true}>\n                <Row>\n                    <Col xs={6}>\n                        <Form onSubmit={handleSubmit(onSubmit)}>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"Address\">\n                                    <Form.Label for=\"Address\" className=\"badge badge-dark\">Address </Form.Label>\n                                    <Form.Control type=\"text\"\n                                        placeholder=\"type your address\"\n                                        {...register(\"Address\", {\n                                            required: true,\n                                            maxLength: 255,\n                                            minLength: 5\n                                        })} />\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"ZipCode\">\n                                    <Form.Label className=\"badge badge-dark\" > Zip Code </Form.Label> &nbsp;\n                                    <IMaskInput\n                                        mask=\"00000-000\"\n                                        radix=\".\"\n                                        unmask={true}\n                                        {...register(\"PostalCode\", {\n                                            required: true,\n                                            maxLength: {\n                                                value: 8,\n                                                message: 'zip code required 8 numbers'\n                                            },\n                                            minLength: {\n                                                value: 8,\n                                                message: 'zip code required 8 numbers'\n                                            }\n                                        })}\n                                        onAccept={(value) => setValue(\"PostalCode\", value)\n                                        }\n                                    />\n                                    <p> {errors.PostalCode && <span style={{ color: 'red', fontWeight: 'bold' }}> {errors.PostalCode?.message} </span>} </p>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"Observation\">\n                                    <Form.Label className=\"badge badge-dark\"> Observation </Form.Label>\n                                    <Form.Control as=\"textarea\" rows={4} placeholder=\"(optional) insert least one observation about your new purchase\"\n                                        {...register(\"Observation\", {\n                                            required: true,\n                                            minLength: {\n                                                value: 0\n                                            }\n                                        })}\n                                    />\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"FormatOfPayment\">\n                                    <Form.Label className=\"badge badge-dark\">Format of Payment </Form.Label>\n                                    <Form.Control as=\"select\" {...register(\"FormatOfPayment\", {\n                                        required: true,\n                                        value: \"1\",\n                                        onChange: e => e.target.value\n                                    })}>\n                                        <option value=\"1\" selected> Credit Card</option>\n                                        <option value=\"2\"> Debit Card</option>\n                                        <option value=\"3\"> Bank Billet</option>\n\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"StatusPurchase\">\n                                    <Form.Label className=\"badge badge-dark\">Status of Purchase </Form.Label>\n                                    <Form.Control as=\"select\" {...register(\"StatusPurchase\", {\n                                        required: true,\n                                        value: \"1\",\n                                        onChange: e => e.target.value\n                                    })}>\n                                        <option value=\"1\" selected> Open </option>\n                                        <option value=\"2\"> Paid </option>\n\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"btnSubmit\" >\n                                    <Button type=\"submit\" sm={6}> Submit </Button>\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"btnBack\">\n                                    <Button className=\"btn btn-warning\" onClick={() => handleGoBack()}> Go Back </Button>\n                                </Form.Group>\n\n                              <Form.Group as={Col} controlId=\"Total\"> \n                                  <Form.Label> Total $ (BRL) </Form.Label>\n                                  </Form.Group>\n\n                              <Form.Group>\n                                 <Form.Label> \n                                       <p><strong>\n                                          { format(\"#,##0.00\",itemsDesc.reduce((acc, item) => item.price + acc, 0))} \n                                      </strong></p> \n                                 </Form.Label>\n                              </Form.Group>\n\n                            </Form.Row>\n                        </Form>\n                    </Col>\n\n                    <Col xs={6}>\n\n                        <Table responsive fluid hover>\n                            <thead>\n                                <tr>\n                                    <th>Icon</th>\n                                    <th>Product Name</th>\n                                    <th>Price</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {itemsDesc && itemsDesc.map(product => (\n                                    <tr key={product.id}>\n                                        <td><img src={product.imageUri} alt=\"product\" height={64} width={64}/></td>\n                                        <td>{product.name}</td>\n                                        <td> {format(\"#,##0.00\", product.price)} </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n\n\n                    </Col>\n\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}