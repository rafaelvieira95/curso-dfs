{"ast":null,"code":"var _jsxFileName = \"/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Pages/User/SignUp/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport { Container, Form, Col, Alert, Button } from 'react-bootstrap';\nimport { IMaskInput } from 'react-imask';\nimport api from '../../../Services/api';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const history = useHistory();\n  const password = useRef({});\n  password.current = watch(\"Password\", \"\");\n\n  const submit = async data => {\n    const {\n      Name,\n      Cpf,\n      Password,\n      Email\n    } = data;\n    const response = await api.post('users', {\n      Name,\n      Email,\n      Cpf,\n      Password\n    });\n    if (response.status === 200) history.push('/signin');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"block\",\n        onSubmit: handleSubmit(submit),\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"Name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \" Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ...register(\"Name\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"Cpf\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \"Enter your Cpf document\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 107\n            }, this), /*#__PURE__*/_jsxDEV(IMaskInput, {\n              mask: \"000.000.000-00\",\n              radix: \".\",\n              ...register(\"Cpf\", {\n                required: true,\n                maxLength: 11,\n                minLength: 11\n              }),\n              unmask: true,\n              onAccept: value => {\n                setValue(\"Cpf\", value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"Email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \"Enter your E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ...register(\"Email\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"Password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \" Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              \"aria-invalid\": errors.Password ? \"true\" : \"false\",\n              ...register(\"Password\", {\n                required: true,\n                maxLength: 16,\n                minLength: {\n                  value: 8,\n                  message: \"Password must have at least 8 characters\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red',\n              fontWeight: 'bold'\n            },\n            children: errors.password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"ConfirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"badge badge-dark\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              \"aria-invalid\": errors.ConfirmPassword ? \"true\" : \"false\",\n              ...register(\"ConfirmPassword\", {\n                validate: value => value === password.current || \"The passwords do not match\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), errors.ConfirmPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red',\n              fontWeight: 'bold'\n            },\n            children: errors.ConfirmPassword.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"SignUp\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \" Sign Up \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), errors.Password && errors.ConfirmPassword && /*#__PURE__*/_jsxDEV(Alert, {\n            as: Col,\n            variant: \"danger\",\n            children: \"Fields Required\"\n          }, 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignUp, \"8CKN9bQXduieuH8CkjzN+Zpjsbk=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Pages/User/SignUp/index.js"],"names":["React","useRef","useForm","useHistory","Container","Form","Col","Alert","Button","IMaskInput","api","SignUp","register","handleSubmit","watch","setValue","formState","errors","history","password","current","submit","data","Name","Cpf","Password","Email","response","post","status","push","required","maxLength","minLength","value","message","color","fontWeight","ConfirmPassword","validate"],"mappings":"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","sourcesContent":["import React, {useRef} from 'react';\nimport { useForm } from 'react-hook-form';\nimport {useHistory} from 'react-router';\nimport { Container, Form, Col, Alert, Button } from 'react-bootstrap';\nimport { IMaskInput } from 'react-imask';\nimport api from '../../../Services/api';\nimport './styles.css';\n\nconst SignUp = () => {\n\n    const { register, handleSubmit, watch, setValue, formState: { errors } } = useForm();\n    const history = useHistory();\n    const password = useRef({});\n    password.current = watch(\"Password\", \"\");\n\n    const submit =  async (data) => {\n       \n         const {Name, Cpf, Password, Email} = data;\n         const response = await api.post('users',{\n              Name, Email, Cpf, Password\n         });\n\n         if(response.status === 200)\n              history.push('/signin');\n        \n    }\n\n    return (\n        <>\n            <Container fluid>\n                <Form className=\"block\" onSubmit={handleSubmit(submit)} >\n\n                    <Form.Row>\n                        <Col md={4}/>\n                        <Form.Group as={Col} controlId=\"Name\">\n                            <Form.Label className=\"badge badge-dark\"> Name </Form.Label>\n                            <Form.Control type=\"text\" {...register(\"Name\", { required: true })} />\n                        </Form.Group>\n                        <Col md={4}/>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Col md={4}/>\n                        <Form.Group as={Col} controlId=\"Cpf\">\n                            <Form.Label className=\"badge badge-dark\">Enter your Cpf document</Form.Label> <br />\n                            <IMaskInput\n                                mask={\"000.000.000-00\"}\n                                radix={\".\"}\n                                {...register(\"Cpf\", { required: true, maxLength: 11, minLength: 11 })}\n                                unmask={true}\n                                onAccept={\n                                    (value) => { setValue(\"Cpf\", value) }\n                                }\n                            /> <br />\n                        <Col md={4}/>\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Col md={4}/>\n                        <Form.Group as={Col} controlId=\"Email\">\n                            <Form.Label className=\"badge badge-dark\">Enter your E-mail</Form.Label>\n                            <Form.Control type=\"email\" {...register(\"Email\", { required: true })} />\n                        </Form.Group>\n                        <Col md={4}/>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Col md={4}/>\n                        <Form.Group as={Col} controlId=\"Password\">\n                            <Form.Label className=\"badge badge-dark\"> Password</Form.Label>\n                            <Form.Control type=\"password\" \n                             aria-invalid={errors.Password ? \"true\" : \"false\"}\n                               {...register(\"Password\", { \n                                   required: true,\n                                   maxLength: 16,\n                                   minLength: {\n                                        value: 8,\n                                        message: \"Password must have at least 8 characters\"       \n                                   } })} />\n                        </Form.Group>\n                        {errors.password && <span style={{color: 'red', fontWeight: 'bold'}}>{errors.password.message}</span>}\n                        <Col md={4}/>\n                    </Form.Row>\n                    \n                    <Form.Row>\n                        <Col md={4}/>\n                        <Form.Group as={Col} controlId=\"ConfirmPassword\">\n                            <Form.Label className=\"badge badge-dark\">Confirm Password</Form.Label>\n                            <Form.Control type=\"password\" \n                               aria-invalid={errors.ConfirmPassword ? \"true\" : \"false\"}\n                               {...register(\"ConfirmPassword\", { \n                                validate: value => value === password.current || \"The passwords do not match\"\n                            }) } />\n                            </Form.Group>\n                            {errors.ConfirmPassword && <span style={{color: 'red', fontWeight: 'bold'}}>{errors.ConfirmPassword.message}</span>}\n                        <Col md={4}/>\n                    </Form.Row>\n                      \n                \n                    <Form.Row>\n                        <Col md={4}/>\n                        <Form.Group as={Col} controlId=\"SignUp\">\n                            <Button className=\"btn btn-success\" type=\"submit\"> Sign Up </Button>\n                            \n                        </Form.Group>\n                        <Col md={4}/>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Col md={4}/>\n                            {(errors.Password && errors.ConfirmPassword) &&\n                             <Alert as={Col} key={1} variant=\"danger\">\n                               Fields Required\n                             </Alert>\n                             }\n                        <Col md={4}/>\n                    </Form.Row>\n                </Form>\n\n            </Container>\n        </>\n    );\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}