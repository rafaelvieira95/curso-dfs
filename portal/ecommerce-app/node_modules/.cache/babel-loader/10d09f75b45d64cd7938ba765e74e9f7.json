{"ast":null,"code":"var _jsxFileName = \"/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Components/UserUpdate/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { Button, Form, Col, Alert, Row } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { IMaskInput } from 'react-imask';\nimport api from '../../Services/api';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserUpdate = () => {\n  _s();\n\n  const history = useHistory();\n  const [user, setUser] = useState(null);\n  const {\n    register,\n    watch,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm({});\n  const passwordRepeat = useRef({});\n  passwordRepeat.current = watch(\"Password\", \"\");\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchUser = async () => {\n      const response = await api.get(`users/${id}`);\n      const obj = response.data;\n      setValue(\"Name\", obj.name);\n      setValue(\"Email\", obj.email);\n      setValue(\"Cpf\", obj.cpf);\n      setValue(\"Password\", obj.password);\n      setValue(\"ConfirmPassword\", obj.password);\n      setUser(response.data);\n    };\n\n    fetchUser();\n  }, [id, setValue]);\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  const submit = async data => {\n    const {\n      Name,\n      Password,\n      Cpf,\n      Email\n    } = data;\n\n    try {\n      const response = await api.put(`users/${id}`, {\n        Name,\n        Email,\n        Cpf,\n        Password\n      });\n\n      if (response.status === 200) {\n        localStorage.removeItem('@ecommerce:user');\n        history.push('/signin');\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"block\",\n      onSubmit: handleSubmit(submit),\n      children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"Name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"badge badge-dark\",\n            children: \" Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            ...register(\"Name\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"Email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"badge badge-dark\",\n            children: \"Enter your E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            ...register(\"Email\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"Cpf\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"badge badge-dark\",\n            children: \"Enter your Cpf document\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 27\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 105\n          }, this), /*#__PURE__*/_jsxDEV(IMaskInput, {\n            mask: \"000.000.000-00\",\n            radix: \".\",\n            value: user === null || user === void 0 ? void 0 : user.cpf,\n            disabled: true,\n            ...register(\"Cpf\", {\n              required: true,\n              maxLength: 11,\n              minLength: 11\n            }),\n            unmask: true,\n            onAccept: () => {\n              setValue(\"Cpf\", user === null || user === void 0 ? void 0 : user.cpf);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"Password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"badge badge-dark\",\n            children: \" Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            \"aria-invalid\": errors.Password ? \"true\" : \"false\",\n            ...register(\"Password\", {\n              required: true,\n              maxLength: 16,\n              minLength: {\n                value: 8,\n                message: \"Password must have at least 8 characters\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), errors.Password && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red',\n            fontWeight: 'bold'\n          },\n          children: errors.Password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"ConfirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"badge badge-dark\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            \"aria-invalid\": errors.ConfirmPassword ? \"true\" : \"false\",\n            ...register(\"ConfirmPassword\", {\n              validate: value => value === passwordRepeat.current || \"The passwords do not match\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), errors.ConfirmPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red',\n            fontWeight: 'bold'\n          },\n          children: errors.ConfirmPassword.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: \"Update\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 6,\n              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn btn-warning\",\n                md: 6,\n                type: \"submit\",\n                children: \" Save Changes \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 36\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 6,\n              children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn btn-info\",\n                md: 6,\n                onClick: () => goBack(),\n                children: \" Go Back \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 36\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this), errors.Password && errors.ConfirmPassword && /*#__PURE__*/_jsxDEV(Alert, {\n          as: Col,\n          variant: \"danger\",\n          children: \"Fields Required\"\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserUpdate, \"s4upYpqbYVRUBz/EuJq/frUH77Y=\", false, function () {\n  return [useHistory, useForm, useParams];\n});\n\n_c = UserUpdate;\nexport default UserUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserUpdate\");","map":{"version":3,"sources":["/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Components/UserUpdate/index.js"],"names":["React","useState","useEffect","useRef","useParams","useHistory","Button","Form","Col","Alert","Row","useForm","IMaskInput","api","UserUpdate","history","user","setUser","register","watch","handleSubmit","setValue","formState","errors","passwordRepeat","current","id","fetchUser","response","get","obj","data","name","email","cpf","password","goBack","submit","Name","Password","Cpf","Email","put","status","localStorage","removeItem","push","error","console","log","required","maxLength","minLength","value","message","color","fontWeight","ConfirmPassword","validate"],"mappings":"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","sourcesContent":["import React, { useState,useEffect, useRef } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { Button, Form, Col, Alert, Row } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { IMaskInput } from 'react-imask';\nimport api from '../../Services/api';\nimport './styles.css';\n\n\nconst UserUpdate = () => {\n\n  const history = useHistory();\n  const [user, setUser] = useState(null);\n  const { register, watch, handleSubmit, setValue, formState: { errors } } = useForm({});\n  \n  const passwordRepeat = useRef({});\n  passwordRepeat.current = watch(\"Password\", \"\");\n\n  const {id} = useParams();\n\n  useEffect(() =>{\n\n    const fetchUser = async() =>{\n\n      const response = await api.get(`users/${id}`);\n      \n      const obj = response.data;\n      setValue(\"Name\", obj.name);\n      setValue(\"Email\", obj.email);\n      setValue(\"Cpf\", obj.cpf);\n      setValue(\"Password\", obj.password);\n      setValue(\"ConfirmPassword\", obj.password);\n      setUser(response.data);\n    }\n      \n      fetchUser();\n\n  }, [id, setValue]);\n\n  const goBack = () =>{ history.goBack(); }\n\n  const submit = async (data) => {\n\n     const {Name, Password, Cpf, Email} = data;\n     \n     try{\n     const response = await api.put(`users/${id}`,{\n        Name, Email, Cpf, Password\n     });\n      \n      if(response.status === 200){\n           localStorage.removeItem('@ecommerce:user');\n           history.push('/signin');\n      }\n    }catch(error){\n      console.log(error.response);\n    }\n         \n  }\n\n  return (\n    <>\n          <Form className=\"block\" onSubmit={handleSubmit(submit)} >\n\n            <Form.Row>\n              <Col md={4} />\n              <Form.Group as={Col} controlId=\"Name\">\n                <Form.Label className=\"badge badge-dark\"> Name </Form.Label>\n                <Form.Control type=\"text\"  {...register(\"Name\", { required: true })} />\n              </Form.Group>\n              <Col md={4} />\n            </Form.Row>\n\n  \n            <Form.Row>\n              <Col md={4} />\n              <Form.Group as={Col} controlId=\"Email\">\n                <Form.Label className=\"badge badge-dark\">Enter your E-mail</Form.Label>\n                <Form.Control type=\"email\"  {...register(\"Email\", { required: true })} />\n              </Form.Group>\n              <Col md={4} />\n            </Form.Row>\n\n            <Form.Row>\n                  <Col md={4}/>\n                       <Form.Group as={Col} controlId=\"Cpf\">\n                          <Form.Label className=\"badge badge-dark\">Enter your Cpf document</Form.Label> <br />\n                            <IMaskInput\n                                mask={\"000.000.000-00\"}\n                                radix={\".\"}\n                                value={user?.cpf}\n                                disabled={true}\n                                {...register(\"Cpf\", { required: true, maxLength: 11, minLength: 11 })}\n                                unmask={true}\n                                onAccept={\n                                    () => { setValue(\"Cpf\", user?.cpf) }\n                                }\n                            /> <br />\n                        <Col md={4}/>\n                        </Form.Group>\n                    </Form.Row>\n\n\n            <Form.Row>\n              <Col md={4} />\n              <Form.Group as={Col} controlId=\"Password\">\n                <Form.Label className=\"badge badge-dark\"> Password</Form.Label>\n                <Form.Control type=\"password\"         \n                  aria-invalid={errors.Password ? \"true\" : \"false\"}\n                  {...register(\"Password\", {\n                    required: true,\n                    maxLength: 16,\n                    minLength: {\n                      value: 8,\n                      message: \"Password must have at least 8 characters\"\n                    }\n                  })} />\n              </Form.Group>\n              {errors.Password && <span style={{ color: 'red', fontWeight: 'bold' }}>{errors.Password.message}</span>}\n              <Col md={4} />\n            </Form.Row>\n\n            <Form.Row>\n              <Col md={4} />\n              <Form.Group as={Col} controlId=\"ConfirmPassword\">\n                <Form.Label className=\"badge badge-dark\">Confirm Password</Form.Label>\n                <Form.Control type=\"password\"   \n                  aria-invalid={errors.ConfirmPassword ? \"true\" : \"false\"}   \n                  {...register(\"ConfirmPassword\", {\n                    validate: value => value === passwordRepeat.current || \"The passwords do not match\"\n                  })} />\n              </Form.Group>\n              {errors.ConfirmPassword && <span style={{ color: 'red', fontWeight: 'bold' }}>{errors.ConfirmPassword.message}</span>}\n              <Col md={4} />\n            </Form.Row>\n\n            <Form.Row>\n              <Col md={4} />\n              <Form.Group as={Col} controlId=\"Update\">\n                    <Row> \n                      <Col xs={6}> <Button className=\"btn btn-warning\" md={6} type=\"submit\"> Save Changes </Button> </Col>\n                      <Col xs={6}> <Button className=\"btn btn-info\" md={6}   onClick={() => goBack()}> Go Back </Button> </Col>\n                     </Row>\n              </Form.Group>\n                 \n              <Col md={4} />\n            </Form.Row>\n\n            <Form.Row>\n              <Col md={4} />\n              {(errors.Password && errors.ConfirmPassword) &&\n                <Alert as={Col} key={1} variant=\"danger\">\n                  Fields Required\n                </Alert>\n              }\n              <Col md={4} />\n            </Form.Row>\n          </Form>\n    </>\n  )\n}\n\nexport default UserUpdate;"]},"metadata":{},"sourceType":"module"}