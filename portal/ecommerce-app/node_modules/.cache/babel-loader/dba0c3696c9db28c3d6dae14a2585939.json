{"ast":null,"code":"var _jsxFileName = \"/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Providers/auth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport api from '../Services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  user: {\n    name: ''\n  },\n  setUser: () => {}\n});\nexport const AuthProvider = props => {\n  _s();\n\n  const [user, setUser] = useState({\n    name: ''\n  });\n  useEffect(() => {\n    const verifyLogin = async () => {\n      const userStorage = localStorage.getItem('@ecommercer:user');\n\n      if (userStorage) {\n        let parse = JSON.parse(userStorage);\n        const response = await api.get(`users/${parse.user.id}`);\n\n        if (response.status === 200) {\n          setUser({\n            name: parse.user.email\n          });\n        } else {\n          setUser({\n            name: 'Hello, Guest!'\n          });\n        }\n      } else {\n        setUser({\n          name: 'Hello, Guest!'\n        });\n      }\n    };\n\n    verifyLogin();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user,\n        setUser\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n\n_s(AuthProvider, \"P9oa6ElSySytnvDcke9nYsvK2BU=\");\n\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n\n  return React.useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/rafaellimavieira/Documents/curso/curso-dfs/portal/ecommerce-app/src/Providers/auth.js"],"names":["React","useState","useEffect","api","AuthContext","createContext","user","name","setUser","AuthProvider","props","verifyLogin","userStorage","localStorage","getItem","parse","JSON","response","get","id","status","email","children","useAuth","useContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,CAAoB;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAP;AACCC,EAAAA,OAAO,EAAE,MAAM,CAAE;AADlB,CAApB,CAApB;AAGP,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAU;AAAA;;AAEjC,QAAM,CAACJ,IAAD,EAAOE,OAAP,IAAkBP,QAAQ,CAAC;AAACM,IAAAA,IAAI,EAAE;AAAP,GAAD,CAAhC;AAEAL,EAAAA,SAAS,CAAC,MAAK;AAEX,UAAMS,WAAW,GAAG,YAAW;AAE5B,YAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAApB;;AACF,UAAGF,WAAH,EAAe;AACT,YAAIG,KAAK,GAAGC,IAAI,CAACD,KAAL,CAAWH,WAAX,CAAZ;AACA,cAAMK,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAJ,CAAS,SAAQH,KAAK,CAACT,IAAN,CAAWa,EAAG,EAA/B,CAAvB;;AAEA,YAAGF,QAAQ,CAACG,MAAT,KAAoB,GAAvB,EAA2B;AACvBZ,UAAAA,OAAO,CAAC;AAACD,YAAAA,IAAI,EAAEQ,KAAK,CAACT,IAAN,CAAWe;AAAlB,WAAD,CAAP;AACH,SAFD,MAEK;AACDb,UAAAA,OAAO,CAAC;AAACD,YAAAA,IAAI,EAAE;AAAP,WAAD,CAAP;AACH;AACN,OATD,MASK;AACHC,QAAAA,OAAO,CAAC;AAACD,UAAAA,IAAI,EAAE;AAAP,SAAD,CAAP;AACD;AACF,KAfA;;AAiBDI,IAAAA,WAAW;AAEb,GArBQ,EAqBN,EArBM,CAAT;AAuBD,sBAAO;AAAA,2BACF,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAACL,QAAAA,IAAD;AAAOE,QAAAA;AAAP,OAA7B;AAAA,gBACKE,KAAK,CAACY;AADX;AAAA;AAAA;AAAA;AAAA;AADE,mBAAP;AAKH,CAhCM;;GAAMb,Y;;KAAAA,Y;AAkCb,OAAO,MAAMc,OAAO,GAAG;AAAA;;AAAA,SAAMvB,KAAK,CAACwB,UAAN,CAAiBpB,WAAjB,CAAN;AAAA,CAAhB;;IAAMmB,O","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport api from '../Services/api';\n\nexport const AuthContext = React.createContext({user: {name: ''}, \n                                                setUser: () => {}});\n\nexport const AuthProvider = (props) =>{\n\n     const [user, setUser] = useState({name: ''});\n     \n     useEffect(() =>{\n\n         const verifyLogin = async () =>{\n          \n            const userStorage = localStorage.getItem('@ecommercer:user');\n          if(userStorage){\n                let parse = JSON.parse(userStorage);\n                const response = await api.get(`users/${parse.user.id}`);\n\n                if(response.status === 200){\n                    setUser({name: parse.user.email});\n                }else{\n                    setUser({name: 'Hello, Guest!'});\n                }\n          }else{\n            setUser({name: 'Hello, Guest!'});\n          }\n        }\n\n        verifyLogin();\n\n     }, []);\n     \n    return(<>\n         <AuthContext.Provider value={{user, setUser}}>\n             {props.children}\n         </AuthContext.Provider>\n    </>);\n}\n\nexport const useAuth = () => React.useContext(AuthContext);"]},"metadata":{},"sourceType":"module"}